<launch>
        <arg name="namespace" default="" />
        <arg name="description_model" default="" />
        <arg name="multisense_ip" default="10.66.171.21" />
        <arg name="multisense_resolution" default="1024x544x64" />

        <include file="$(find ihmc_ros_common)/launch/robot_description_common.launch">
                <arg name="robot_name" value="$(arg namespace)" />
                <arg name="model_file" value="$(arg description_model)" />
        </include>

        <include file="$(find multisense_bringup)/multisense.launch">
                <arg name="ip_address" value="$(arg multisense_ip)" />
        </include>

        <node name="set_motor_speed" pkg="dynamic_reconfigure" type="dynparam" args="set --timeout=10 /multisense motor_speed 2.5" />

        <node name="set_resolution" pkg="dynamic_reconfigure" type="dynparam" args="set --timeout=10 /multisense resolution $(arg multisense_resolution)" />

        <node name="transform_provider" pkg="transform_provider" type="transform_provider_node" />
<!--        <include file="$(find scan_to_cloud)/launch/filter_scan.launch" /> -->
  <node pkg="nodelet" type="nodelet" name="pcl_pre_processing" args="manager" output="screen" />

  <arg name="tunning" default="false"/>

  <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_pre_processing" output="screen">
    <remap from="~input" to="/stat_out/output" />
    <remap from="~output" to="/filter_chain/output"/>
    <rosparam>
      # Dynamic parameters
      leaf_size: 0.008               # The size of a leaf (on x,y,z) used for downsampling. Range: 0.0 to 1.0
      filter_field_name: z          # The field name used for filtering; z axis points out from the camera, meaning is the depth dimension.
      filter_limit_min: 0.35        # The minimum allowed field value a point will be considered from Range: -1000.0 to 1000.0 
      filter_limit_max: 4.0         # The maximum allowed field value a point will be considered from Range: -1000.0 to 1000.0 
      filter_limit_negative: false  # Set to true if we want to return the data outside [filter_limit_min; filter_limit_max]
      keep_organized: false         # Keep cloud structure; if set to true NaNs points will be kept.
      # Static parameters
      max_queue_size: 1             # Incomming messages queue/buffer (process always newest cloud).
    </rosparam>
  </node>

  <node pkg="nodelet" type="nodelet" name="statistical_outliner_removal" args="load pcl/StatisticalOutlierRemoval  pcl_pre_processing" output="screen">
    <remap from="~input" to="/voxel_cloud" />
    <remap from="~output" to="/stat_out/output" />
    <rosparam>
      # Dynamic paramerers
      mean_k: 40                   # The number of points to use for mean distance estimation Range: 2 to 100 
      stddev: 0.05                  # The standard deviation multiplier threshold. All points outside the mean +- sigma * std_mul will be considered outliers. Range: 0.0 to 5.0 
      max_queue_size: 1             # Incomming messages queue.
    </rosparam>
  </node>
        <include file="$(find stereo_cloud)/launch/voxel_cloud.launch">
	    <arg name="ip_address" value="$(arg multisense_ip)" />
	    <arg name="namespace" value="$(arg namespace)" />
	    <arg name="launch_robot_state_publisher" value="false" />
        </include>
</launch>
