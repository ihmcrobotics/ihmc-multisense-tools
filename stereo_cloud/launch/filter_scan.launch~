<launch>


  <!-- Valid Sensor types are SL, S7, S7S, S21, and BCAM -->

  <arg name="ip_address" default="192.168.100.101" />
  <arg name="namespace"  default="multisense" />
  <arg name="mtu"        default="7200" />
  <arg name="sensor"     default="SL" />
  <arg name="launch_robot_state_publisher" default="true" />

  <!-- Robot state publisher -->
  <group if = "$(arg launch_robot_state_publisher)">
    <param name="robot_description"
          command="$(find xacro)/xacro.py '$(find multisense_description)/urdf/multisense$(arg sensor)/standalone.urdf.xacro' name:=$(arg namespace)"/>
    <node pkg="robot_state_publisher" type="state_publisher" name="$(arg namespace)_state_publisher">
      <param name="publish_frequency" type="double" value="50.0" />
      <remap from="joint_states" to="/$(arg namespace)/joint_states" />
    </node>
  </group>

<!--
  <group if = "$(arg launch_robot_state_publisher)">
    <param name="robot_description"
           textfile="$(find multisense_description)/urdf/multisense$(arg sensor).urdf"/>
    <node pkg="robot_state_publisher" type="state_publisher" name="$(arg namespace)_state_publisher">
      <param name="publish_frequency" type="double" value="100.0" />
      <remap from="joint_states" to="/$(arg namespace)/joint_states" />
      <param name="tf_prefix" value="/$(arg namespace)" />
    </node>
  </group>
-->

  <!-- ROS Driver -->
   <node pkg="multisense_ros" ns="$(arg namespace)" type="ros_driver" name="multisense_driver" output="screen">
     <param name="sensor_ip"   value="$(arg ip_address)" />
     <param name="sensor_mtu"  value="$(arg mtu)" />
     <param name="tf_prefix"   value="/$(arg namespace)" />
  </node>

  <!-- Color Laser PointCloud Publisher -->
   <node pkg="multisense_ros" ns="$(arg namespace)" type="color_laser_publisher" name="color_laser_publisher" output="screen">
      <remap from="image_rect_color" to="/$(arg namespace)/left/image_rect_color" />
      <remap from="lidar_points2" to="/$(arg namespace)/lidar_points2" />
      <remap from="camera_info" to="/$(arg namespace)/left/image_rect_color/camera_info" />
  </node>


  <!-- feed for near scan -->
  <node pkg="laser_filters" type="scan_to_cloud_filter_chain" name="lidar_nearscan_filter">
    <rosparam command="load" file="$(find scan_to_cloud)/config/default.yaml"/>
    <param name="high_fidelity" value="true" />
    <param name="target_frame" type="string" value="multisense/head" />
    <param name="incident_angle_correction" value="false" />
    <remap from="scan" to="/multisense/lidar_scan"/>
    <remap from="cloud_filtered" to="multisense/filtered_cloud" />
  </node>


  <node pkg="laser_assembler" type="point_cloud2_assembler" name="point_cloud_assembler">
    <remap from="cloud" to="/multisense/lidar_points2" />
    <param name="fixed_frame" value="multisense/head" />
    <param name="max_clouds" value="1200" />
  </node>

  <node pkg="scan_to_cloud" type="periodic_assembler" name="periodic_assembler"/>
  <node pkg="scan_to_cloud" type="scanToWorldPublisher.py" name="scanToWorldPublisher" output="screen"/>
</launch>
